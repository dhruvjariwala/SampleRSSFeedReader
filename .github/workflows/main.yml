name: hello-world
on: push
jobs:
  my-job:
    continue-on-error: true
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: set-env
        run: |
          echo "GITHUB_COMMIT_MESSAGE=$(git log -1 --format='%s')" >> $GITHUB_ENV
      - name: validate-commit-message-tag
        id: validate-commit-message-tag
        run: |
          echo "Hello World!"
          echo $GITHUB_COMMIT_MESSAGE
          echo $GITHUB_PR_NUMBER
          if [[ $GITHUB_COMMIT_MESSAGE == *"[GMVIEWS_MAJOR]"* || 
                  $GITHUB_COMMIT_MESSAGE == *"[GMVIEWS_MINOR]"* ||
                  $GITHUB_COMMIT_MESSAGE == *"[GMVIEWS_BUG_FIX]"* ||
                  $GITHUB_COMMIT_MESSAGE == *"[GMVIEWS_OTHER]"* ]]; then
            echo "GMVIEWS tag required for automated release notes does exists"
          else
            echo "GMVIEWS tag required for automated release notes does NOT exists"
            exit 1
          fi
      - uses: actions/github-script@v6
        id: get_issue_number
        with:
          script: |
            if (context.issue.number) {
              // Return issue number if present
              return context.issue.number;
            } else {
              // Otherwise return issue number from commit
              return (
                await github.rest.repos.listPullRequestsAssociatedWithCommit({
                  commit_sha: context.sha,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                })
              ).data[0].number;
            }
          result-encoding: string
      - name: post-failure-comment-on-pr
        if: failure() && steps.validate-commit-message-tag.outcome == 'failure'
        env:
          URL: "https://api.github.com/repos/dhruvjariwala/SampleRSSFeedReader/issues/comments"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ secrets.GITHUB_REF }}
        run: |
          echo '${{steps.get_issue_number.outputs.result}}'
          echo "$URL"
          echo "$GITHUB_TOKEN"
          echo "$PR_NUMBER"
          echo "$GITHUB_REF"
          
          curl \
            -X POST \
            $URL \
            -H "Content-Type: application/json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            --data '{ "body": "blah blah" }'
